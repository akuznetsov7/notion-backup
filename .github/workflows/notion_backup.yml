name: "Notion backup"

on:
  push:
    branches:
      - master
  # schedule:
  #   - cron: "0 */4 * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    name: Backup
    # timeout-minutes: 15
    env:
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      NOTION_FILE_TOKEN: ${{ secrets.NOTION_FILE_TOKEN }}
      NOTION_SPACE_ID: ${{ secrets.NOTION_SPACE_ID }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Delete previous backup
        run: rm -rf markdown html *.zip

      - name: Setup dependencies
        run: npm install -g notion-backup

      - name: Run backup
        run: |
          node -e '
          const fs = require("fs");
          const util = require("util");
          const exec = util.promisify(require("child_process").exec);

          async function backupFiles(path) {
            const files = fs.readdirSync(path);
            for (const file of files) {
              const filePath = `${path}/${file}`;
              if (fs.statSync(filePath).isFile()) {
                try {
                  await exec(`notion-backup "${filePath}"`, {
                    env: {
                      NOTION_TOKEN: process.env.NOTION_TOKEN,
                      NOTION_FILE_TOKEN: process.env.NOTION_FILE_TOKEN,
                      NOTION_SPACE_ID: process.env.NOTION_SPACE_ID
                    }
                  });
                } catch (error) {
                  if (error.message.includes("ENAMETOOLONG")) {
                    fs.appendFileSync("failed_files.txt", `${filePath}\n`);
                  }
                }
              } else if (fs.statSync(filePath).isDirectory()) {
                await backupFiles(filePath);
              }
            }
          }

          backupFiles(".");
          '

      - name: Delete zips
        run: |
          rm -f *.zip
          rm -f markdown/*-Part*.zip
          rm -f html/*-Part*.zip

      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Automated snapshot"
          git push
